version: '3.8'

services:
  db:
    image: postgres:17
    container_name: erp_db
    restart: unless-stopped
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER:-erp_user}
      - POSTGRES_PASSWORD=${DB_PASSWORD:-erp_password}
      - POSTGRES_DB=${DB_NAME:-erp_db}
    volumes:
      - db_data:/var/lib/postgresql/data
    networks:
      - efk_net
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-erp_user} -d ${DB_NAME:-erp_db}"]
      interval: 10s
      timeout: 5s
      retries: 5
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M

  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: erp_pgadmin
    restart: unless-stopped
    ports:
      - "7000:80"
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@admin.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
      - PGADMIN_CONFIG_ENHANCED_COOKIE_PROTECTION=True
      - PGADMIN_CONFIG_LOGIN_BANNER="Authorized users only!"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    networks:
      - efk_net
    depends_on:
      - db

  django:
    build: .
    container_name: hoshro_erp
    restart: unless-stopped
    ports:
      - "8000:8000"
    volumes:
      - .:/app
      - static_volume:/app/staticfiles
    environment:
      - DJANGO_SETTINGS_MODULE=erp_main.settings
      - DJANGO_SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG:-False}
      - DB_NAME=${DB_NAME:-erp_db}
      - DB_USER=${DB_USER:-erp_user}
      - DB_PASSWORD=${DB_PASSWORD:-erp_password}
      - DB_HOST=db
      - DB_PORT=5432
      - DJANGO_ALLOWED_HOSTS=${DJANGO_ALLOWED_HOSTS:-localhost,127.0.0.1}
    command: >
      sh -c "
        echo 'Waiting for database to be ready...' &&
        while ! pg_isready -h db -p 5432 -U ${DB_USER:-erp_user}; do
          echo 'Database is not ready yet. Waiting...'
          sleep 2
        done &&
        echo 'Database is ready!' &&
        python manage.py collectstatic --noinput &&
        python manage.py runserver 0.0.0.0:8000
      "
    networks:
      - efk_net
    depends_on:
      db:
        condition: service_healthy

  redis:
    image: redis:7
    container_name: redis_erp
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    restart: unless-stopped
    networks:
      - efk_net

networks:
  efk_net:
    driver: bridge

volumes:
  db_data:
  pgadmin_data:
  static_volume:
  redis_data:
